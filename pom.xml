<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vaadin</groupId>
    <artifactId>portlet-address-book</artifactId>
    <name>Address book demo</name>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8
        </project.reporting.outputEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <javax.validation.version>2.0.0.Final</javax.validation.version>

        <vaadin.version>14.1.0.beta3</vaadin.version>
        <flow.version>2.2.0.alpha6</flow.version>
        <vaadin-portlet.version>1.0.0.beta1</vaadin-portlet.version>
        <vaadin.productionMode>true</vaadin.productionMode>

        <pluto.version>3.1.0</pluto.version>
    </properties>

    <modules>
        <!-- Backend first as both portlets use it -->
        <module>addressbook-backend</module>

        <!-- Portlets can be built in any order as they do not have -->
        <!-- a dependency between them -->
        <module>addressbook-grid</module>
        <module>addressbook-form</module>

        <!-- Depends on portlets, so build as last -->
        <module>addressbook-bundle</module>
    </modules>

    <repositories>
        <repository>
            <id>vaadin-prereleases</id>
            <url>https://maven.vaadin.com/vaadin-prereleases/</url>
        </repository>
        <repository>
            <id>vaadin-snapshots</id>
            <url>
                https://oss.sonatype.org/content/repositories/vaadin-snapshots/
            </url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>vaadin-addons</id>
            <url>https://maven.vaadin.com/vaadin-addons/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>vaadin-prereleases</id>
            <url>https://maven.vaadin.com/vaadin-prereleases/</url>
        </pluginRepository>
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>
                https://oss.sonatype.org/content/repositories/vaadin-snapshots/
            </url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.vaadin</groupId>
                <!-- Replace artifactId with vaadin-core to use only free components -->
                <artifactId>vaadin</artifactId>
                <version>${vaadin.version}</version>
                <exclusions>
                    <!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
                    <exclusion>
                        <groupId>com.vaadin.webjar</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.webjars.bowergithub.insites</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.webjars.bowergithub.polymer</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.webjars.bowergithub.polymerelements</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.webjars.bowergithub.vaadin</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.webjars.bowergithub.webcomponents</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-portlet</artifactId>
                <version>${vaadin-portlet.version}</version>
            </dependency>
            <!-- remove these once 14.2 pre-release is out: -->
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>flow-data</artifactId>
                <version>${flow.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>flow-server</artifactId>
                <version>${flow.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>flow-client</artifactId>
                <version>${flow.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <version>1.7.7</version>
                    <configuration>
                        <container>
                            <containerId>tomcat8x</containerId>
                        </container>
                        <configuration>
                            <type>existing</type>
                            <home>
                                ${project.build.directory}/pluto-${pluto.version}
                            </home>

                            <properties>
                                <cargo.start.jvmargs>
                                    -Xdebug
                                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
                                    -Xnoagent
                                    -Djava.compiler=NONE
                                </cargo.start.jvmargs>
                            </properties>
                        </configuration>
                        <!-- Set an empty deployer so that cargo does not try to add the
                        current project's artifact to the container (as this was already
                        done by maven) -->
                        <deployer/>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.3</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <archive>
                            <manifestEntries>
                                <Implementation-Title>${project.name}</Implementation-Title>
                                <Implementation-Version>${project.version}</Implementation-Version>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>production</id>

            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <!-- Using Flow plugin instead of Vaadin plugin due to lacking prerelease of Vaadin 14.2 -->
                        <artifactId>flow-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-frontend</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>servlet</id>
            <dependencies>

                <dependency>
                    <groupId>javax.portlet</groupId>
                    <artifactId>portlet-api</artifactId>
                    <version>2.0</version>
                </dependency>
            </dependencies>
            <build>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.0</version>
                    </plugin>
                    <!-- Jetty plugin for easy testing without a server -->
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>9.4.19.v20190610</version>
                        <configuration>
                            <!-- If using IntelliJ IDEA with autocompilation, this
                            might cause lots of unnecessary compilations in the
                            background.-->
                            <scanIntervalSeconds>2</scanIntervalSeconds>
                            <!-- Use war output directory to get the webpack files -->
                            <webAppConfig>
                                <allowDuplicateFragmentNames>true
                                </allowDuplicateFragmentNames>
                            </webAppConfig>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>autosetup</id>
            <modules><module>portal</module></modules>
        </profile>
        <profile>
            <id>autocopy</id>

            <modules><module>portal</module></modules>
        </profile>
    </profiles>
</project>

